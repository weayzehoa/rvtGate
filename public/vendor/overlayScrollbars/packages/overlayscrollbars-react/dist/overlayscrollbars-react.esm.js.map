{"version":3,"file":"overlayscrollbars-react.esm.js","sources":["../src/OverlayScrollbarsComponent.tsx"],"sourcesContent":["import React, { Component, RefObject } from 'react';\r\nimport OverlayScrollbars from \"overlayscrollbars\";\r\n\r\nexport interface OverlayScrollbarsComponentProps extends React.HTMLAttributes<HTMLDivElement> {\r\n    children?: any;\r\n    options?: OverlayScrollbars.Options;\r\n    extensions?: OverlayScrollbars.Extensions;\r\n}\r\nexport interface OverlayScrollbarsComponentState { }\r\n\r\nexport class OverlayScrollbarsComponent extends Component<OverlayScrollbarsComponentProps, OverlayScrollbarsComponentState> {\r\n    private _osInstance: OverlayScrollbars | null = null;\r\n    private _osTargetRef: RefObject<HTMLDivElement>;\r\n\r\n    constructor(props: OverlayScrollbarsComponentProps) {\r\n        super(props);\r\n        this._osTargetRef = React.createRef();\r\n    }\r\n\r\n    osInstance(): OverlayScrollbars | null {\r\n        return this._osInstance;\r\n    }\r\n\r\n    osTarget(): HTMLDivElement | null {\r\n        return this._osTargetRef.current || null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._osInstance = OverlayScrollbars(this.osTarget(), this.props.options || {}, this.props.extensions);\r\n        mergeHostClassNames(this._osInstance, this.props.className);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (OverlayScrollbars.valid(this._osInstance)) {\r\n            this._osInstance.destroy();\r\n            this._osInstance = null;\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps: OverlayScrollbarsComponentProps) {\r\n        if (OverlayScrollbars.valid(this._osInstance)) {\r\n            this._osInstance.options(this.props.options);\r\n\r\n            if (prevProps.className !== this.props.className) {\r\n                mergeHostClassNames(this._osInstance, this.props.className);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            options,\r\n            extensions,\r\n            children,\r\n            className,\r\n            ...divProps\r\n        } = this.props;\r\n\r\n        return (\r\n            <div className=\"os-host\" {...divProps} ref={this._osTargetRef}>\r\n                <div className=\"os-resize-observer-host\"></div>\r\n                <div className=\"os-padding\">\r\n                    <div className=\"os-viewport\">\r\n                        <div className=\"os-content\">\r\n                            {this.props.children}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"os-scrollbar os-scrollbar-horizontal \">\r\n                    <div className=\"os-scrollbar-track\">\r\n                        <div className=\"os-scrollbar-handle\"></div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"os-scrollbar os-scrollbar-vertical\">\r\n                    <div className=\"os-scrollbar-track\">\r\n                        <div className=\"os-scrollbar-handle\"></div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"os-scrollbar-corner\"></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mergeHostClassNames(osInstance: OverlayScrollbars, className: string) {\r\n    if (OverlayScrollbars.valid(osInstance)) {\r\n        const { host } = osInstance.getElements();\r\n        const regex = new RegExp(`(^os-host([-_].+|)$)|${osInstance.options().className.replace(/\\s/g, \"$|\")}$`, 'g');\r\n        const osClassNames = host.className.split(' ')\r\n            .filter(name => name.match(regex))\r\n            .join(' ');\r\n\r\n        host.className = `${osClassNames} ${className || ''}`;\r\n    }\r\n}"],"names":[],"mappings":"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"}